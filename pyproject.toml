[project]
name = "json-tabulate"
version = "0.1.0"
description = "Python library and CLI program that translates arbitrarily-nested JSON into CSV"
readme = "README.md"
authors = []
requires-python = ">=3.9"
dependencies = [
    "typer>=0.9.0",
    "typing-extensions>=4.15.0"
]

[dependency-groups]
dev = [
    "mypy>=1.18.1",
    "ptpython>=3.0.31",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.13.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.urls]
Homepage = "https://github.com/eecavanna/json-tabulate"
Repository = "https://github.com/eecavanna/json-tabulate"

[project.scripts]
json-tabulate = "json_tabulate.cli:app"

# Configure pytest to run doctests, and to not display a code coverage report if a test fails.
# Docs: https://docs.pytest.org/en/stable/reference/customize.html#pyproject-toml
[tool.pytest.ini_options]
addopts = "--doctest-modules --no-cov-on-fail"

# Configure pytest-cov to measure coverage only for the `src/` directory.
# Docs: https://pytest-cov.readthedocs.io/en/latest/config.html
[tool.coverage.run]
source = ["src"]

# Configure mypy to perform type checking within the `src/` and `tests/` directories.
# Docs: https://mypy.readthedocs.io/en/stable/config_file.html#using-a-pyproject-toml-file
[tool.mypy]
files = ["src", "tests"]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
# Specify which linting rules will be used when someone runs `$ uv run ruff check`.
# Note: The default rules are `["E4", "E7", "E9", "F"]`.
# References:
# - https://docs.astral.sh/ruff/rules/ (the list of rules)
# - https://docs.astral.sh/ruff/rules/#pydocstyle-d (the "D" rules below)
# - https://docs.astral.sh/ruff/settings/#lint_select (the `select` setting)
select = ["E4", "E7", "E9", "F", "D101", "D102", "D103", "I"]

# Configure ruff to _not_ apply certain linter rules to certain files.
[tool.ruff.lint.per-file-ignores]
"tests/test_*.py" = ["D"]
